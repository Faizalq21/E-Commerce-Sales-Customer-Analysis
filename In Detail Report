E-Commerce Sales & Customer Analysis Project
Overview
This project aims to uncover valuable insights from an e-commerce dataset to drive strategic growth and decision-making. By leveraging the power of SQL for data querying and Python with Pandas for data manipulation and visualization, we conducted a comprehensive analysis to explore various aspects of customer behavior, sales performance, and product analytics.

Tools & Technologies
Python: Used for data manipulation, analysis, and visualization.
SQL: Utilized for efficient data querying and aggregation.
Pandas: Employed for data handling and transformation.
Matplotlib & Seaborn: Utilized for data visualization and reporting.
Integration of SQL and Python
The project seamlessly integrates SQL with Python to enable efficient data extraction, transformation, and analysis. Using a MySQL connector, we connected Python scripts to the SQL database, allowing us to execute SQL queries within our Python environment. This integration facilitated a streamlined workflow, combining the querying power of SQL with the analytical capabilities of Python and Pandas.

Key Analyses and Findings
Geographic Insights
List all unique cities where customers are located.
Objective: Identify diverse geographical locations of customers for targeted marketing strategies.
Method: SQL SELECT DISTINCT statement.
Tools Used: SQL, Python, Pandas.

Sales Performance
Count the number of orders placed in 2017.
Objective: Determine sales volume for the year 2017 to assist in year-over-year growth analysis.
Method: SQL COUNT and YEAR functions.
Tools Used: SQL, Python.

Product Analysis
Find the total sales per category.
Objective: Identify key revenue-driving product categories.
Method: SQL joins and aggregations.
Tools Used: SQL, Python, Pandas.

Calculate the percentage of orders that were paid in installments.
Objective: Understand customer payment preferences and impact on revenue.
Method: SQL conditional aggregation.
Tools Used: SQL, Python.

Count the number of customers from each state.
Objective: Identify customer distribution across states for region-specific marketing.
Method: SQL GROUP BY and COUNT.
Tools Used: SQL, Python, Pandas, Matplotlib.

Monthly Sales Trends
Calculate the number of orders per month in 2018.
Objective: Analyze monthly sales trends within 2018 to identify peak and low sales periods.
Method: SQL MONTHNAME and YEAR functions.
Tools Used: SQL, Python, Pandas, Seaborn.

Customer Behavior
Find the average number of products per order, grouped by customer city.
Objective: Determine purchasing behavior in different cities.
Method: SQL subqueries and joins.
Tools Used: SQL, Python, Pandas.

Revenue Distribution
Calculate the percentage of total revenue contributed by each product category.
Objective: Understand revenue distribution across product categories.
Method: SQL joins and percentage calculations.
Tools Used: SQL, Python, Pandas.

Correlation Analysis
Identify the correlation between product price and the number of times a product has been purchased.
Objective: Explore the relationship between product pricing and purchase frequency.
Method: SQL joins and aggregation.
Tools Used: SQL, Python, Pandas, NumPy.

Seller Performance
Calculate the total revenue generated by each seller, and rank them by revenue.
Objective: Identify top-performing sellers based on total revenue.
Method: SQL joins and DENSE_RANK.
Tools Used: SQL, Python, Pandas.

Customer Order History
Calculate the moving average of order values for each customer over their order history.
Objective: Smooth out fluctuations in order values and identify spending patterns.
Method: SQL window functions.
Tools Used: SQL, Python, Pandas.

Cumulative Sales
Calculate the cumulative sales per month for each year.
Objective: Track the progressive accumulation of sales over each month.
Method: SQL window functions.
Tools Used: SQL, Python, Pandas.

Year-Over-Year Growth
Calculate the year-over-year growth rate of total sales.
Objective: Measure annual sales growth and assess overall business performance.
Method: SQL subqueries and window functions.
Tools Used: SQL, Python, Pandas.

Customer Retention
Calculate the retention rate of customers, defined as the percentage of customers who make another purchase within 6 months of their first purchase.
Objective: Evaluate customer loyalty and retention strategies.
Method: SQL subqueries and joins.
Tools Used: SQL, Python, Pandas.

Top Customers
Identify the top 3 customers who spent the most money in each year.
Objective: Recognize high-value customers and tailor retention strategies.
Method: SQL subqueries and DENSE_RANK.
Tools Used: SQL, Python, Pandas, Seaborn.

Conclusion
This project highlights the importance of combining SQL and Python for comprehensive data analysis in e-commerce. By leveraging these tools, we gained valuable insights into customer behavior, sales performance, and product analytics, enabling data-driven decisions and strategic growth.
